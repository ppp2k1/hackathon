type Query {
    ClusterByKey(key: String): Cluster
    VserverByKey(key: String): Vserver
    VolumeByKey(key: String): Volume
    SecurityConfigByVm(name: String): SecurityConfig
}


type Cluster {
    key: String!
    name: String!
    vservers: [Vserver]
}

type Vserver {
    key: String!
    name: String!
    volumes: [Volume]
}

type Volume {
    key: String!
    name: String!
}

type SecurityConfig {
    name: String!
    vmware: VmWare
    ontap: Ontap
}

type VmWare {
    id: Long!
    ipAddress: String!
    vmName: String!
    firewallOn: String!
    path: String!
}

type Ontap {
    ip: String!
    path: String!
    encrypt: Boolean
    volumeAntivirusAttributes: AntivirusAttributes
    volumeMirrorAttributes: MirrorAttributes
    volumeSecurityAttributes: SecurityAttributes
}

type AntivirusAttributes {
    onAccessPolicy: String!
}

type MirrorAttributes {
    dataProtectionMirror: Boolean
    loadSharingMirror: Boolean
    moveMirror: Boolean
    replicaVolume: Boolean
    snapmirrorSource: String!
    mirrorTransferInProgress: Boolean
    redirectSnapshotId: Long
}

type SecurityAttributes {
    style: String!
    volumeSecurityUnixAttributes: SecurityUnixAttributes
}

type SecurityUnixAttributes {
    groupId: String!
    permissions: Long
    userId: String!
}